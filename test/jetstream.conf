jetstream {}

server_name: jetstream

listen:  0.0.0.0:-1

system_account: sys
no_auth_user: global

accounts {
  a: {
    jetstream: enabled,
    users: [
      {user: a, password: a}
    ]
    # for testing aggregate account with stream imports
    exports [
      { stream: '$JS.EVENT.*.>' }
    ]
    # for testing aggregate account with service imports
    imports [
      { service: { account: aggregate_service, subject: '$JS.EVENT.*.ACC.a.>' }, to: '$JS.EVENT.*.>' }
    ]
  }
  b: {
    jetstream: enabled,
    users: [
      { user: b, password: b }
    ]
    # for testing aggregate account with stream imports
    exports [
      { stream: '$JS.EVENT.*.>' }
    ]
    # for testing aggregate account with service imports
    imports [
      { service: { account: aggregate_service, subject: '$JS.EVENT.*.ACC.b.>' }, to: '$JS.EVENT.*.>' }
    ]
  }
  c: {
    jetstream: enabled,
    users: [
      { nkey: UCUCQH5GPMLKUB4NCR5EIAGJ5E5RGB57VRO5CT5XAEQTID75ERQRVUQV }
    ]
  }
  d: {
    jetstream: enabled,
    users: [
      { user: d, password: d }
    ]
  }
  global: {
    jetstream: enabled,
    users: [
      {user: global, password: global}
    ]
  }
  ## this account aggregates js advisory events from accounts a and b via stream imports
  aggregate_stream: {
    jetstream: enabled,
    users: [
      {user: agg_stream, password: agg_stream}
    ]
    imports [
       { stream: { account: a, subject: "$JS.EVENT.*.>" }, to: "$JS.EVENT.*.ACC.a.>" }
       { stream: { account: b, subject: "$JS.EVENT.*.>" }, to: "$JS.EVENT.*.ACC.b.>" }
    ]
  }
  # this account aggregates js advisory events from accounts a and b via service export
  aggregate_service: {
    jetstream: enabled,
    users: [
      {user: agg_service, password: agg_service}
    ]
    exports [
        { service: '$JS.EVENT.*.ACC.*.>', account_token_position: 5 }
    ]
  }
  sys: {}
}
