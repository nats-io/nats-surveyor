networks:
  monitor-net:
    driver: bridge

services:
  surveyor:
    image: natsio/nats-surveyor:${SURVEYOR_DOCKER_TAG}
    container_name: nats-surveyor
    ports:
      - "7777:7777"
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      # When both USER/PASS and CREDS are passed
      # the USER/PASS takes priority
      - ${NATS_SURVEYOR_CREDS:-/dev/null}:/etc/surveyor/SYS.creds
      - ./observations:/observations
      - ./jetstream:/jetstream
    environment:
      - NATS_SURVEYOR_CREDS=/etc/surveyor/SYS.creds
      - NATS_SURVEYOR_USER  
      - NATS_SURVEYOR_PASSWORD
      - NATS_SURVEYOR_SERVERS
      - NATS_SURVEYOR_SERVER_COUNT
    command: --count ${NATS_SURVEYOR_SERVER_COUNT} -s "${NATS_SURVEYOR_SERVERS}" --accounts --observe /observations --jetstream /jetstream
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "nats-monitoring"

  prometheus:
    image: prom/prometheus:${PROMETHEUS_DOCKER_TAG}
    container_name: prometheus
    restart: "no"
    volumes:
      - ./prometheus/:/etc/prometheus/
      - $PROMETHEUS_STORAGE:/usr/local/share/prometheus
    command: --config.file=/etc/prometheus/prometheus.yml --storage.tsdb.path=/usr/local/share/prometheus
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "nats-monitoring"
    depends_on:
      - surveyor

  grafana:
    image: grafana/grafana:${GRAFANA_DOCKER_TAG}
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - ./grafana/provisioning:/etc/grafana/provisioning
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "nats-monitoring"
    depends_on:
      - prometheus
